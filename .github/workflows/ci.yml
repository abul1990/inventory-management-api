# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Continuous Integration

on:
  push:
    branches: [ "**" ]

jobs:
  build:
    name: Build service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'gradle'

      - name: Build service
        run: |
          chmod +x gradlew
          ./gradlew clean build 
        continue-on-error: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            src/build/*
          retention-days: 5
          
  sonar:
    name: Sonar Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        
      - name: SonarQube Quality Gate check
        continue-on-error: true
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time
        timeout-minutes: 5
        

      - name: Result of sonarqube scan
        run: |
          echo "Report is available"


# name: Java CI with Gradle

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#     - name: Gradle
#       run: chmod +x gradlew
#     - name: Build
#       run: ./gradlew build
      
#   create_dockerfile:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Publish Docker
#         uses: elgohr/Publish-Docker-Github-Action@2.14
#         with:
#           name: abulassan/inventory-management:latest
#           username: abulassan
#           password: Abul@1990
#           context: .
